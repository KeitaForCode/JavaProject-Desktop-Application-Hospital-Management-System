/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mymainjavaproject;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Leo
 */
public class ReceptionistDashBoard extends javax.swing.JFrame {

    /**
     * Creates new form ReceptionistDashBoard
     */
    public ReceptionistDashBoard() {
        initComponents();
        setVisible(true);
        setResizable(false);
        setLocationRelativeTo(null);
        setTitle("Receptionist Dashboard");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        layeredpane = new javax.swing.JLayeredPane();
        homepanel = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        appointmentpanel = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        appoint_firstname = new javax.swing.JTextField();
        appoint_lastname = new javax.swing.JTextField();
        appoing_age = new javax.swing.JTextField();
        appoint_genderM = new javax.swing.JRadioButton();
        appoint_genderF = new javax.swing.JRadioButton();
        appoint_address = new javax.swing.JTextField();
        appoint_mobile = new javax.swing.JTextField();
        appoint_email = new javax.swing.JTextField();
        appoint_docid = new javax.swing.JTextField();
        appoint_docname = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        appoint_add = new javax.swing.JButton();
        appoint_update = new javax.swing.JButton();
        appoint_delete = new javax.swing.JButton();
        appoint_reset = new javax.swing.JButton();
        date = new javax.swing.JLabel();
        jButton17 = new javax.swing.JButton();
        jDateChooser2 = new com.toedter.calendar.JDateChooser();
        attendancepanel = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        attend_name = new javax.swing.JTextField();
        attend_title = new javax.swing.JTextField();
        attend_signin = new javax.swing.JTextField();
        attend_timein = new javax.swing.JTextField();
        attend_signout = new javax.swing.JTextField();
        attend_timeout = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jSeparator4 = new javax.swing.JSeparator();
        jButton7 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jLabel29 = new javax.swing.JLabel();
        attend_date = new javax.swing.JTextField();
        patientpanel = new javax.swing.JPanel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jSeparator5 = new javax.swing.JSeparator();
        patient_name = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        patient_id = new javax.swing.JTextField();
        patientname = new javax.swing.JTextField();
        patientaddress = new javax.swing.JTextField();
        patientroom = new javax.swing.JTextField();
        patientmobile = new javax.swing.JTextField();
        patientdisease = new javax.swing.JTextField();
        patientdocid = new javax.swing.JTextField();
        patientdocname = new javax.swing.JTextField();
        jSeparator6 = new javax.swing.JSeparator();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jButton18 = new javax.swing.JButton();
        iderror = new javax.swing.JLabel();
        namerror = new javax.swing.JLabel();
        aderror = new javax.swing.JLabel();
        rerror = new javax.swing.JLabel();
        merror = new javax.swing.JLabel();
        derror = new javax.swing.JLabel();
        diderror = new javax.swing.JLabel();
        dname = new javax.swing.JLabel();
        viewpanel = new javax.swing.JPanel();
        jLabel30 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jButton14 = new javax.swing.JButton();
        jButton15 = new javax.swing.JButton();
        jButton16 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(0, 102, 102));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel5.setFont(new java.awt.Font("Arial Black", 1, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("ROYAL+ HOSPITAL ");
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 20, 280, -1));

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mymainjavaproject/images/No Shellfish_52px_1.png"))); // NOI18N
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 10, -1, -1));

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mymainjavaproject/images/Administrator Male_52px.png"))); // NOI18N
        jPanel2.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(1020, 10, -1, -1));

        jLabel9.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Receptionist");
        jPanel2.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(1090, 10, -1, -1));

        jButton6.setFont(new java.awt.Font("Times New Roman", 3, 12)); // NOI18N
        jButton6.setForeground(new java.awt.Color(255, 255, 255));
        jButton6.setText("Log Out?");
        jButton6.setBorder(null);
        jButton6.setContentAreaFilled(false);
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(1100, 40, 50, -1));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1440, 67));

        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mymainjavaproject/images/Recept1.jpg"))); // NOI18N
        jPanel3.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 130));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mymainjavaproject/images/recept3.jpg"))); // NOI18N
        jPanel3.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 0, 370, 130));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mymainjavaproject/images/recept4.jpg"))); // NOI18N
        jPanel3.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 0, 400, 130));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mymainjavaproject/images/recept5.jpg"))); // NOI18N
        jLabel4.setText("jLabel4");
        jPanel3.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(1100, 0, 340, 130));

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 73, -1, 126));

        jPanel4.setBackground(new java.awt.Color(0, 102, 102));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mymainjavaproject/images/Home_20px_1.png"))); // NOI18N
        jButton1.setText("HOME");
        jButton1.setBorder(null);
        jButton1.setContentAreaFilled(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 10, -1, -1));

        jButton2.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mymainjavaproject/images/Calendar_20px.png"))); // NOI18N
        jButton2.setText("BOOK APPOINMENT");
        jButton2.setBorder(null);
        jButton2.setContentAreaFilled(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 10, -1, -1));

        jButton3.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mymainjavaproject/images/Plus Math_20px.png"))); // NOI18N
        jButton3.setText("PATIENT");
        jButton3.setBorder(null);
        jButton3.setContentAreaFilled(false);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 10, -1, -1));

        jButton4.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mymainjavaproject/images/Ok_20px.png"))); // NOI18N
        jButton4.setText("MARK ATTENDANCE");
        jButton4.setBorder(null);
        jButton4.setContentAreaFilled(false);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 10, -1, -1));

        jButton5.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        jButton5.setForeground(new java.awt.Color(255, 255, 255));
        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mymainjavaproject/images/Visible_20px.png"))); // NOI18N
        jButton5.setText("VIEW");
        jButton5.setBorder(null);
        jButton5.setContentAreaFilled(false);
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 10, 70, -1));

        jPanel1.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 205, 1440, 50));

        layeredpane.setLayout(new java.awt.CardLayout());

        homepanel.setBackground(new java.awt.Color(51, 51, 51));
        homepanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 4));
        homepanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mymainjavaproject/images/recept6.jpg"))); // NOI18N
        homepanel.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(-6, -4, 980, 460));

        layeredpane.add(homepanel, "card2");

        appointmentpanel.setBackground(new java.awt.Color(51, 51, 51));
        appointmentpanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 4));
        appointmentpanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel10.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("BOOK APPOINTMENT");
        appointmentpanel.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 20, -1, -1));
        appointmentpanel.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, 940, 10));

        jLabel11.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("First_Name:");
        appointmentpanel.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 80, -1, -1));

        jLabel12.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Last_Name:");
        appointmentpanel.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 130, -1, -1));

        jLabel13.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Age:");
        appointmentpanel.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 190, -1, -1));

        jLabel14.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("Gender:");
        appointmentpanel.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 250, -1, -1));

        jLabel15.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("Address:");
        appointmentpanel.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 310, -1, -1));

        jLabel16.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("Mobile:");
        appointmentpanel.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 80, -1, -1));

        jLabel17.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText("Email_Address:");
        appointmentpanel.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 140, -1, -1));

        jLabel18.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setText("Doctor_ID:");
        appointmentpanel.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 200, -1, -1));

        jLabel19.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 255, 255));
        jLabel19.setText("Doctor_Name:");
        appointmentpanel.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 250, -1, -1));

        appoint_firstname.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        appointmentpanel.add(appoint_firstname, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 80, 150, -1));

        appoint_lastname.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        appointmentpanel.add(appoint_lastname, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 130, 150, -1));

        appoing_age.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        appointmentpanel.add(appoing_age, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 190, 150, -1));

        buttonGroup1.add(appoint_genderM);
        appoint_genderM.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        appoint_genderM.setForeground(new java.awt.Color(0, 255, 255));
        appoint_genderM.setText("Male");
        appoint_genderM.setBorder(null);
        appoint_genderM.setContentAreaFilled(false);
        appoint_genderM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                appoint_genderMActionPerformed(evt);
            }
        });
        appointmentpanel.add(appoint_genderM, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 250, -1, -1));

        buttonGroup1.add(appoint_genderF);
        appoint_genderF.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        appoint_genderF.setForeground(new java.awt.Color(0, 255, 255));
        appoint_genderF.setText("Female");
        appoint_genderF.setBorder(null);
        appoint_genderF.setContentAreaFilled(false);
        appoint_genderF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                appoint_genderFActionPerformed(evt);
            }
        });
        appointmentpanel.add(appoint_genderF, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 250, -1, -1));

        appoint_address.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        appointmentpanel.add(appoint_address, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 310, 150, -1));

        appoint_mobile.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        appointmentpanel.add(appoint_mobile, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 80, 150, -1));

        appoint_email.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        appointmentpanel.add(appoint_email, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 140, 150, -1));

        appoint_docid.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        appointmentpanel.add(appoint_docid, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 200, 150, -1));

        appoint_docname.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        appointmentpanel.add(appoint_docname, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 250, 150, -1));
        appointmentpanel.add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 362, 940, 10));

        appoint_add.setBackground(new java.awt.Color(51, 51, 51));
        appoint_add.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        appoint_add.setForeground(new java.awt.Color(255, 255, 255));
        appoint_add.setText("ADD");
        appoint_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                appoint_addActionPerformed(evt);
            }
        });
        appointmentpanel.add(appoint_add, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 390, -1, -1));

        appoint_update.setBackground(new java.awt.Color(51, 51, 51));
        appoint_update.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        appoint_update.setForeground(new java.awt.Color(255, 255, 255));
        appoint_update.setText("UPDATE");
        appoint_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                appoint_updateActionPerformed(evt);
            }
        });
        appointmentpanel.add(appoint_update, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 390, -1, -1));

        appoint_delete.setBackground(new java.awt.Color(51, 51, 51));
        appoint_delete.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        appoint_delete.setForeground(new java.awt.Color(255, 255, 255));
        appoint_delete.setText("DELETE");
        appoint_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                appoint_deleteActionPerformed(evt);
            }
        });
        appointmentpanel.add(appoint_delete, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 390, -1, -1));

        appoint_reset.setBackground(new java.awt.Color(51, 51, 51));
        appoint_reset.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        appoint_reset.setForeground(new java.awt.Color(255, 255, 255));
        appoint_reset.setText("RESET");
        appoint_reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                appoint_resetActionPerformed(evt);
            }
        });
        appointmentpanel.add(appoint_reset, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 390, -1, -1));

        date.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        date.setForeground(new java.awt.Color(255, 255, 255));
        date.setText("Date:");
        appointmentpanel.add(date, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 300, -1, -1));

        jButton17.setBackground(new java.awt.Color(51, 51, 51));
        jButton17.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        jButton17.setForeground(new java.awt.Color(255, 255, 255));
        jButton17.setText("RETRIEVE");
        jButton17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton17ActionPerformed(evt);
            }
        });
        appointmentpanel.add(jButton17, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 390, -1, -1));

        jDateChooser2.setDateFormatString("yyy-MM-dd");
        appointmentpanel.add(jDateChooser2, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 290, 150, 30));

        layeredpane.add(appointmentpanel, "card3");

        attendancepanel.setBackground(new java.awt.Color(51, 51, 51));
        attendancepanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 4));
        attendancepanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel20.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(255, 255, 255));
        jLabel20.setText("MARK ATTENDENCE");
        attendancepanel.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 10, -1, -1));
        attendancepanel.add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 950, 10));

        jLabel21.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(255, 255, 255));
        jLabel21.setText("Full_Name:");
        attendancepanel.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 60, -1, -1));

        jLabel22.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(255, 255, 255));
        jLabel22.setText("Title:");
        attendancepanel.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 100, -1, -1));

        jLabel23.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(255, 255, 255));
        jLabel23.setText("Sign_In:");
        attendancepanel.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 140, -1, -1));

        jLabel24.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(255, 255, 255));
        jLabel24.setText("Time_Signin:");
        attendancepanel.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 180, -1, -1));

        jLabel25.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(255, 255, 255));
        jLabel25.setText("Sign_Out:");
        attendancepanel.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 220, -1, -1));

        jLabel26.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(255, 255, 255));
        jLabel26.setText("Time_Signout:");
        attendancepanel.add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 270, -1, -1));

        attend_name.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        attendancepanel.add(attend_name, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 60, 130, -1));

        attend_title.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        attendancepanel.add(attend_title, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 100, 130, -1));

        attend_signin.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        attendancepanel.add(attend_signin, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 140, 130, -1));

        attend_timein.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        attendancepanel.add(attend_timein, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 180, 130, -1));

        attend_signout.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        attendancepanel.add(attend_signout, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 220, 130, -1));

        attend_timeout.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        attendancepanel.add(attend_timeout, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 270, 130, -1));

        jTable1.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Full_Name", "Title", "Sign_In", "Time_Signin", "Sign_Out", "Time_Signout", "Date"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(14);
        }

        attendancepanel.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(292, 50, 670, 390));
        attendancepanel.add(jSeparator4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 340, 250, 10));

        jButton7.setBackground(new java.awt.Color(51, 51, 51));
        jButton7.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        jButton7.setForeground(new java.awt.Color(255, 255, 255));
        jButton7.setText("MARK");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        attendancepanel.add(jButton7, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 370, 100, -1));

        jButton11.setBackground(new java.awt.Color(51, 51, 51));
        jButton11.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        jButton11.setForeground(new java.awt.Color(255, 255, 255));
        jButton11.setText("CANCEL");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });
        attendancepanel.add(jButton11, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 370, 110, -1));

        jLabel29.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        jLabel29.setForeground(new java.awt.Color(255, 255, 255));
        jLabel29.setText("Date:");
        attendancepanel.add(jLabel29, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 310, 40, -1));
        attendancepanel.add(attend_date, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 310, 130, -1));

        layeredpane.add(attendancepanel, "card4");

        patientpanel.setBackground(new java.awt.Color(51, 51, 51));
        patientpanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 4));
        patientpanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel27.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(255, 255, 255));
        jLabel27.setText("ADD NEW PATIENT");
        patientpanel.add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 20, -1, -1));

        jLabel28.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        jLabel28.setForeground(new java.awt.Color(255, 255, 255));
        jLabel28.setText("Patiend_ID:");
        patientpanel.add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 70, -1, -1));
        patientpanel.add(jSeparator5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 950, 10));

        patient_name.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        patient_name.setForeground(new java.awt.Color(255, 255, 255));
        patient_name.setText("Full_Name:");
        patientpanel.add(patient_name, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 140, -1, -1));

        jLabel31.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        jLabel31.setForeground(new java.awt.Color(255, 255, 255));
        jLabel31.setText("Date of Birth:");
        patientpanel.add(jLabel31, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 210, -1, -1));

        jLabel32.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        jLabel32.setForeground(new java.awt.Color(255, 255, 255));
        jLabel32.setText("Address:");
        patientpanel.add(jLabel32, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 270, -1, -1));

        jLabel33.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        jLabel33.setForeground(new java.awt.Color(255, 255, 255));
        jLabel33.setText("Room_Number:");
        patientpanel.add(jLabel33, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 330, -1, -1));

        jLabel34.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        jLabel34.setForeground(new java.awt.Color(255, 255, 255));
        jLabel34.setText("Mobile:");
        patientpanel.add(jLabel34, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 80, -1, -1));

        jLabel35.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        jLabel35.setForeground(new java.awt.Color(255, 255, 255));
        jLabel35.setText("Disease:");
        patientpanel.add(jLabel35, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 140, -1, -1));

        jLabel36.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        jLabel36.setForeground(new java.awt.Color(255, 255, 255));
        jLabel36.setText("Doctor_ID:");
        patientpanel.add(jLabel36, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 210, -1, -1));

        jLabel37.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        jLabel37.setForeground(new java.awt.Color(255, 255, 255));
        jLabel37.setText("Doctor_Name:");
        patientpanel.add(jLabel37, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 260, -1, -1));

        patient_id.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        patient_id.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                patient_idKeyReleased(evt);
            }
        });
        patientpanel.add(patient_id, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 70, 60, 30));

        patientname.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        patientname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                patientnameKeyReleased(evt);
            }
        });
        patientpanel.add(patientname, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 140, 150, -1));

        patientaddress.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        patientaddress.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                patientaddressKeyReleased(evt);
            }
        });
        patientpanel.add(patientaddress, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 270, 150, -1));

        patientroom.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        patientroom.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                patientroomKeyReleased(evt);
            }
        });
        patientpanel.add(patientroom, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 330, 150, -1));

        patientmobile.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        patientmobile.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                patientmobileKeyReleased(evt);
            }
        });
        patientpanel.add(patientmobile, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 80, 150, -1));

        patientdisease.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        patientdisease.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                patientdiseaseKeyReleased(evt);
            }
        });
        patientpanel.add(patientdisease, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 140, 150, -1));

        patientdocid.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        patientdocid.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                patientdocidKeyReleased(evt);
            }
        });
        patientpanel.add(patientdocid, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 210, 150, -1));

        patientdocname.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        patientdocname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                patientdocnameKeyReleased(evt);
            }
        });
        patientpanel.add(patientdocname, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 260, 150, -1));
        patientpanel.add(jSeparator6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 362, 930, 20));

        jButton8.setBackground(new java.awt.Color(51, 51, 51));
        jButton8.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        jButton8.setForeground(new java.awt.Color(255, 255, 255));
        jButton8.setText("ADD");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        patientpanel.add(jButton8, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 390, -1, -1));

        jButton9.setBackground(new java.awt.Color(51, 51, 51));
        jButton9.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        jButton9.setForeground(new java.awt.Color(255, 255, 255));
        jButton9.setText("UPDATE");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        patientpanel.add(jButton9, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 390, -1, -1));

        jButton10.setBackground(new java.awt.Color(51, 51, 51));
        jButton10.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        jButton10.setForeground(new java.awt.Color(255, 255, 255));
        jButton10.setText("DELETE");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });
        patientpanel.add(jButton10, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 380, -1, -1));

        jButton12.setBackground(new java.awt.Color(51, 51, 51));
        jButton12.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        jButton12.setForeground(new java.awt.Color(255, 255, 255));
        jButton12.setText("RESET");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });
        patientpanel.add(jButton12, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 380, -1, -1));

        jDateChooser1.setDateFormatString("yyy-MM-dd");
        patientpanel.add(jDateChooser1, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 210, 150, -1));

        jButton18.setBackground(new java.awt.Color(51, 51, 51));
        jButton18.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        jButton18.setForeground(new java.awt.Color(255, 255, 255));
        jButton18.setText("RETRIEVE");
        jButton18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton18ActionPerformed(evt);
            }
        });
        patientpanel.add(jButton18, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 390, -1, -1));

        iderror.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        iderror.setForeground(new java.awt.Color(51, 255, 255));
        patientpanel.add(iderror, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 80, 130, 20));

        namerror.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        namerror.setForeground(new java.awt.Color(51, 255, 255));
        patientpanel.add(namerror, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 144, 140, 20));

        aderror.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        aderror.setForeground(new java.awt.Color(51, 255, 255));
        patientpanel.add(aderror, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 270, 130, 20));

        rerror.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        rerror.setForeground(new java.awt.Color(51, 255, 255));
        patientpanel.add(rerror, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 334, 120, 20));

        merror.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        merror.setForeground(new java.awt.Color(51, 255, 255));
        patientpanel.add(merror, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 80, 120, 20));

        derror.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        derror.setForeground(new java.awt.Color(51, 255, 255));
        patientpanel.add(derror, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 140, 120, 20));

        diderror.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        diderror.setForeground(new java.awt.Color(51, 255, 255));
        patientpanel.add(diderror, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 210, 120, 20));

        dname.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        dname.setForeground(new java.awt.Color(51, 255, 255));
        patientpanel.add(dname, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 260, 120, 20));

        layeredpane.add(patientpanel, "card5");

        viewpanel.setBackground(new java.awt.Color(51, 51, 51));
        viewpanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 4));
        viewpanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel30.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mymainjavaproject/images/reproductive.jpg"))); // NOI18N
        viewpanel.add(jLabel30, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 970, 450));

        layeredpane.add(viewpanel, "card6");

        jPanel1.add(layeredpane, new org.netbeans.lib.awtextra.AbsoluteConstraints(276, 279, 970, 450));

        jPanel6.setBackground(new java.awt.Color(51, 51, 51));
        jPanel6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 102), 2));
        jPanel6.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton14.setBackground(new java.awt.Color(51, 51, 51));
        jButton14.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        jButton14.setForeground(new java.awt.Color(255, 255, 255));
        jButton14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mymainjavaproject/images/Visible_20px.png"))); // NOI18N
        jButton14.setText("PATIENT");
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });
        jPanel6.add(jButton14, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 170, -1));

        jButton15.setBackground(new java.awt.Color(51, 51, 51));
        jButton15.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        jButton15.setForeground(new java.awt.Color(255, 255, 255));
        jButton15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mymainjavaproject/images/Visible_20px.png"))); // NOI18N
        jButton15.setText("APPOINTMENT");
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });
        jPanel6.add(jButton15, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 150, 170, -1));

        jButton16.setBackground(new java.awt.Color(51, 51, 51));
        jButton16.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        jButton16.setForeground(new java.awt.Color(255, 255, 255));
        jButton16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mymainjavaproject/images/Visible_20px.png"))); // NOI18N
        jButton16.setText("ATTENDANCE");
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton16ActionPerformed(evt);
            }
        });
        jPanel6.add(jButton16, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 340, 170, -1));

        jPanel1.add(jPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(1250, 360, 170, 370));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1430, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 791, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        ReceptionistSingIn rs = new ReceptionistSingIn();
        this.dispose();
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        changePanel( homepanel);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        changePanel(appointmentpanel);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        changePanel(attendancepanel);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        changePanel(patientpanel);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        changePanel(viewpanel);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model =(DefaultTableModel)jTable1.getModel();
        model.addRow(new Object[]{
        attend_name.getText(),
        attend_title.getText(),
        attend_signin.getText(),
        attend_timein.getText(),
        attend_signout.getText(),
        attend_timeout.getText(),
        attend_date.getText(),
        });
        try{
         String user = "root";
            String password = "";
            String url = "jdbc:mysql://localhost:3306/javaDatabase";
            Class.forName("com.mysql.jdbc.Driver");
            Connection con = DriverManager.getConnection(url, user, password);
            String query = "insert into MarkAttendance(Full_Name, Title, Sign_In,Time_SignIn, Sign_Out, Time_SignOut, Date)values(?,?,?,?,?,?,?)";
            PreparedStatement pst = con.prepareStatement(query);
            pst.setString(1, attend_name.getText());
            pst.setString(2, attend_title.getText());
            pst.setString(3, attend_signin.getText());
            pst.setString(4, attend_timein.getText());
            pst.setString(5, attend_signout.getText());
            pst.setString(6, attend_timeout.getText());
            pst.setString(7, attend_date.getText());
            if(attend_name.getText().trim().equals("")){
            JOptionPane.showMessageDialog(null, "Full name field must not be empty");
            }
            else if(attend_title.getText().trim().equals("")){
            JOptionPane.showMessageDialog(null, "You must enter the title");
            }
            else if(attend_signin.getText().trim().equals("")){
            JOptionPane.showMessageDialog(null, "You must enter the signature");
            }
            else if(attend_timein.getText().trim().equals("")){
            JOptionPane.showMessageDialog(null, "You must enter the time");
            }
            else if(attend_signout.getText().trim().equals("")){
            JOptionPane.showMessageDialog(null, "You must enter the signature");
            }
            else if(attend_timeout.getText().trim().equals("")){
            JOptionPane.showMessageDialog(null, "You must enter the time");
            }
            else if(attend_date.getText().trim().equals("")){
            JOptionPane.showMessageDialog(null, "Date field must not be empty");
            }
            else{
            pst.executeUpdate();
            JOptionPane.showMessageDialog(null, "Mark Successfully");
            attend_name.setText("");
            attend_title.setText("");
            attend_signin.setText("");
            attend_timein.setText("");
            attend_signout.setText("");
            attend_timeout.setText("");
            attend_date.setText("");
            }
        }
        catch(Exception e){
        JOptionPane.showMessageDialog(null, "Successful Added");
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void appoint_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_appoint_addActionPerformed
        // TODO add your handling code here:
        try{
            String user = "root";
            String password = "";
            String url = "jdbc:mysql://localhost:3306/javaDatabase";
            Class.forName("com.mysql.jdbc.Driver");
            Connection con = DriverManager.getConnection(url, user, password);
            String query = "insert into BookAppointment(First_Name, Last_Name,Age, Gender, Address , Mobile, Email_Address,Doctor_ID, Doctor_Name,Date)values(?,?,?,?,?,?,?,?,?,?)";
            PreparedStatement pst = con.prepareStatement(query);
            pst.setString(1, appoint_firstname.getText());
            pst.setString(2, appoint_lastname.getText());
            pst.setString(3, appoing_age.getText());
            pst.setString(4, Gender);
            pst.setString(5, appoint_address.getText());
            pst.setString(6, appoint_mobile.getText());
            pst.setString(7, appoint_email.getText());
            pst.setString(8, appoint_docid.getText());
            pst.setString(9, appoint_docname.getText());
            pst.setString(10, ((JTextField)jDateChooser2.getDateEditor().getUiComponent()).getText());
            if(appoint_firstname.getText().trim().equals("")){
                JOptionPane.showMessageDialog(null, "First name field must not be empty");
            }
            else if(appoint_lastname.getText().trim().equals("")){
                JOptionPane.showMessageDialog(null, "Last name must not be empty");
            }
            else if(appoing_age.getText().trim().equals("")){
                JOptionPane.showMessageDialog(null, "You must enter patient age");
            }
            else if(appoint_address.getText().trim().equals("")){
                JOptionPane.showMessageDialog(null, "Address field must not be empty");
            }
            else if(appoint_mobile.getText().trim().equals("")){
                JOptionPane.showMessageDialog(null, "You must enter patient phone number");
            }
            else if(appoint_email.getText().trim().equals("")){
                JOptionPane.showMessageDialog(null, "Email field must not be empty");
            }
            else if(appoint_docid.getText().trim().equals("")){
                JOptionPane.showMessageDialog(null, "Doctor ID field must not be empty");
            }
            else if(appoint_docname.getText().trim().equals("")){
                JOptionPane.showMessageDialog(null, "You must enter the doctor name");
            }
            else if(jDateChooser2.getDate().equals(null)){
                JOptionPane.showMessageDialog(null, "You must enter end date");
            }
            else{
                pst.executeUpdate();
                JOptionPane.showMessageDialog(null, "Successfully Added");
                appoint_firstname.setText("");
                appoint_lastname.setText("");
                appoing_age.setText("");
                appoint_address.setText("");
                appoint_mobile.setText("");
                appoint_email.setText("");
                appoint_docid.setText("");
                appoint_docname.setText("");
                jDateChooser2.setDate(null);
            }
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_appoint_addActionPerformed

    private void appoint_genderMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_appoint_genderMActionPerformed
        // TODO add your handling code here:
        Gender = "Male";
    }//GEN-LAST:event_appoint_genderMActionPerformed

    private void appoint_genderFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_appoint_genderFActionPerformed
        // TODO add your handling code here:
        Gender = "Female";
    }//GEN-LAST:event_appoint_genderFActionPerformed

    private void jButton17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton17ActionPerformed
        // TODO add your handling code here:
          try{
          String user = "root";
        String password = "";
        String url = "jdbc:mysql://localhost:3306/javaDatabase";
        Class.forName("com.mysql.jdbc.Driver");
        Connection con = DriverManager.getConnection(url, user, password);
        String getapp = appoint_docid.getText();
        String qry = "Select *  from BookAppointment where Doctor_ID = "+getapp;
        PreparedStatement pst = con.prepareStatement(qry);
        ResultSet rs = pst.executeQuery();
        while(rs.next()){
        appoint_firstname.setText(rs.getString("First_Name"));
        appoint_lastname.setText(rs.getString("Last_Name"));
         appoing_age.setText(rs.getString("Age"));
         appoint_address.setText(rs.getString("Address"));
         appoint_mobile.setText(rs.getString("Mobile"));
         appoint_email.setText(rs.getString("Email_Address"));
         //appoint_docid.setText(rs.getString("Doctor_ID"));
         appoint_docname.setText(rs.getString("Doctor_Name"));
         jDateChooser2.setDate(rs.getDate("Date"));
               
        }
        }
        catch(Exception ex){
            System.out.println("ERROR OCCURED");
            System.out.println("Error" + ex);
        }
    }//GEN-LAST:event_jButton17ActionPerformed

    private void appoint_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_appoint_updateActionPerformed
        // TODO add your handling code here:
         try{
            String user = "root";
            String password = "";
            String url = "jdbc:mysql://localhost:3306/javaDatabase";
            Class.forName("com.mysql.jdbc.Driver");
            String update = appoint_docid.getText();
            Connection con = DriverManager.getConnection(url, user, password);
            String query = "update BookAppointment set First_Name =?, Last_Name=?,Age=?, Gender=?, Address=? , Mobile=?, Email_Address=?, Doctor_Name=?,Date=? where Doctor_ID ="+update;
            PreparedStatement pst = con.prepareStatement(query);
            pst.setString(1, appoint_firstname.getText());
            pst.setString(2, appoint_lastname.getText());
            pst.setString(3, appoing_age.getText());
            pst.setString(4, Gender);
            pst.setString(5, appoint_address.getText());
            pst.setString(6, appoint_mobile.getText());
            pst.setString(7, appoint_email.getText());
            //pst.setString(8, appoint_docid.getText());
            pst.setString(8, appoint_docname.getText());
            pst.setString(9, ((JTextField)jDateChooser2.getDateEditor().getUiComponent()).getText());
            if(appoint_firstname.getText().trim().equals("")){
                JOptionPane.showMessageDialog(null, "First name field must not be empty");
            }
            else if(appoint_lastname.getText().trim().equals("")){
                JOptionPane.showMessageDialog(null, "Last name must not be empty");
            }
            else if(appoing_age.getText().trim().equals("")){
                JOptionPane.showMessageDialog(null, "You must enter patient age");
            }
            else if(appoint_address.getText().trim().equals("")){
                JOptionPane.showMessageDialog(null, "Address field must not be empty");
            }
            else if(appoint_mobile.getText().trim().equals("")){
                JOptionPane.showMessageDialog(null, "You must enter patient phone number");
            }
            else if(appoint_email.getText().trim().equals("")){
                JOptionPane.showMessageDialog(null, "Email field must not be empty");
            }
            else if(appoint_docid.getText().trim().equals("")){
                JOptionPane.showMessageDialog(null, "Doctor ID field must not be empty");
            }
            else if(appoint_docname.getText().trim().equals("")){
                JOptionPane.showMessageDialog(null, "You must enter the doctor name");
            }
            else if(jDateChooser2.getDate().equals(null)){
                JOptionPane.showMessageDialog(null, "You must enter end date");
            }
            else{
                pst.executeUpdate();
                JOptionPane.showMessageDialog(null, "Successfully updated");
                appoint_firstname.setText("");
                appoint_lastname.setText("");
                appoing_age.setText("");
                appoint_address.setText("");
                appoint_mobile.setText("");
                appoint_email.setText("");
                appoint_docid.setText("");
                appoint_docname.setText("");
                jDateChooser2.setDate(null);
            }
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_appoint_updateActionPerformed

    private void appoint_resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_appoint_resetActionPerformed
        // TODO add your handling code here:
            appoint_firstname.setText("");
             appoint_lastname.setText("");
                appoing_age.setText("");
                appoint_address.setText("");
                appoint_mobile.setText("");
                appoint_email.setText("");
                appoint_docid.setText("");
                appoint_docname.setText("");
                jDateChooser2.setDate(null);
    }//GEN-LAST:event_appoint_resetActionPerformed

    private void appoint_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_appoint_deleteActionPerformed
        // TODO add your handling code here:
             try{
         String user = "root";
        String password = "";
         String url = "jdbc:mysql://localhost:3306/javaDatabase";
        Class.forName("com.mysql.jdbc.Driver");
        String did1 = appoint_docid.getText();
        Connection con = DriverManager.getConnection(url, user, password);
        String query = "delete from BookAppointment where Doctor_ID = "+did1;
        PreparedStatement pst = con.prepareStatement(query);
        //pst.setInt(1, 9);
        pst.executeUpdate();
        JOptionPane.showMessageDialog(null, "Successfully deleted");
        }
        catch(Exception e){
        JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_appoint_deleteActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        // TODO add your handling code here:
           JOptionPane.showMessageDialog(null, "You have cancel");
            attend_name.setText("");
            attend_title.setText("");
            attend_signin.setText("");
            attend_timein.setText("");
            attend_signout.setText("");
            attend_timeout.setText("");
            attend_date.setText("");
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
         try{
        String user = "root";
        String password = "";
         String url = "jdbc:mysql://localhost:3306/javaDatabase";
        Class.forName("com.mysql.jdbc.Driver");
        Connection con = DriverManager.getConnection(url, user, password);
        String qry = "insert into AddPatient3 (Full_Name, DateOfBirth, Address, Room_Number, Mobile, Disease, Doctor_ID, Doctor_Name) values(?,?,?,?,?,?,?,?)";
          PreparedStatement pst = con.prepareStatement(qry);
        //pst.setString(1, patient_id.getText());
        pst.setString(1, patientname.getText());
        pst.setString(2, ((JTextField)jDateChooser1.getDateEditor().getUiComponent()).getText());
        pst.setString(3, patientaddress.getText());
        pst.setString(4, patientroom.getText());
        pst.setString(5, patientmobile.getText());
        pst.setString(6, patientdisease.getText());
        pst.setString(7, patientdocid.getText());
        pst.setString(8, patientdocname.getText());
//        if(patient_id.getText().trim().equals("")){
//        JOptionPane.showMessageDialog(null, "Patient ID field must not be empty");
//        }
          if(patientname.getText().trim().equals("")){
        JOptionPane.showMessageDialog(null, "Patient name must not be empty");
        }
        else if(jDateChooser1.getDate().equals(null)){
        JOptionPane.showMessageDialog(null, "Date of birth field must not be empty");
        }
        else if(patientaddress.getText().trim().equals("")){
        JOptionPane.showMessageDialog(null, "Address field must not be empty");
        }
        else if(patientroom.getText().trim().equals("")){
        JOptionPane.showMessageDialog(null, "Patient Room number must not be empty");
        }
        else if(patientmobile.getText().trim().equals("")){
        JOptionPane.showMessageDialog(null, "Mobile field must not be empty");
        }
        else if(patientdisease.getText().trim().equals("")){
        JOptionPane.showMessageDialog(null, "Disease field must not be empty");
        }
        else if(patientdocid.getText().trim().equals("")){
        JOptionPane.showMessageDialog(null, "Doctor ID field must not be empty");
        }
        else if(patientdocname.getText().trim().equals("")){
        JOptionPane.showMessageDialog(null, "Doctor name field must not be empty");
        }
        else{
        pst.executeUpdate();
        JOptionPane.showMessageDialog(null, "Successfully Added");
        patient_id.setText("");
        patientname.setText("");
        jDateChooser1.setDate(null);
        patientaddress.setText("");
        patientroom.setText("");
        patientmobile.setText("");
        patientdisease.setText("");
        patientdocid.setText("");
        patientdocname.setText("");
        }
        }
        catch(Exception e){
        JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
          try{
        String user = "root";
        String password = "";
         String url = "jdbc:mysql://localhost:3306/javaDatabase";
        Class.forName("com.mysql.jdbc.Driver");
        String updatepaid = patient_id.getText();
        Connection con = DriverManager.getConnection(url, user, password);
        String qry = "update AddPatient3 set Full_Name =?, DateOfBirth =?, Address=?, Room_Number=?, Mobile=?, Disease=?, Doctor_ID=?, Doctor_Name=? where Paient_ID ="+updatepaid;
          PreparedStatement pst = con.prepareStatement(qry);
        //pst.setString(1, patient_id.getText());
        pst.setString(1, patientname.getText());
        pst.setString(2, ((JTextField)jDateChooser1.getDateEditor().getUiComponent()).getText());
        pst.setString(3, patientaddress.getText());
        pst.setString(4, patientroom.getText());
        pst.setString(5, patientmobile.getText());
        pst.setString(6, patientdisease.getText());
        pst.setString(7, patientdocid.getText());
        pst.setString(8, patientdocname.getText());
        if(patient_id.getText().trim().equals("")){
        JOptionPane.showMessageDialog(null, "Patient ID field must not be empty");
        }
        else if(patientname.getText().trim().equals("")){
        JOptionPane.showMessageDialog(null, "Patient name must not be empty");
        }
        else if(jDateChooser1.getDate().equals(null)){
        JOptionPane.showMessageDialog(null, "Date of birth field must not be empty");
        }
        else if(patientaddress.getText().trim().equals("")){
        JOptionPane.showMessageDialog(null, "Address field must not be empty");
        }
        else if(patientroom.getText().trim().equals("")){
        JOptionPane.showMessageDialog(null, "Patient Room number must not be empty");
        }
        else if(patientmobile.getText().trim().equals("")){
        JOptionPane.showMessageDialog(null, "Mobile field must not be empty");
        }
        else if(patientdisease.getText().trim().equals("")){
        JOptionPane.showMessageDialog(null, "Disease field must not be empty");
        }
        else if(patientdocid.getText().trim().equals("")){
        JOptionPane.showMessageDialog(null, "Doctor ID field must not be empty");
        }
        else if(patientdocname.getText().trim().equals("")){
        JOptionPane.showMessageDialog(null, "Doctor name field must not be empty");
        }
        else{
        pst.executeUpdate();
        JOptionPane.showMessageDialog(null, "Successfully Updated");
        patient_id.setText("");
        patientname.setText("");
        jDateChooser1.setDate(null);
        patientaddress.setText("");
        patientroom.setText("");
        patientmobile.setText("");
        patientdisease.setText("");
        patientdocid.setText("");
        patientdocname.setText("");
        }
        }
        catch(Exception e){
        JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton18ActionPerformed
        // TODO add your handling code here:
         try{
          String user = "root";
        String password = "";
         String url = "jdbc:mysql://localhost:3306/javaDatabase";
        Class.forName("com.mysql.jdbc.Driver");
        String repid = patient_id.getText();
        Connection con = DriverManager.getConnection(url, user, password);
        String qry = "select * from AddPatient3 where Paient_ID ="+repid;
        PreparedStatement pst = con.prepareStatement(qry);
        ResultSet rs = pst.executeQuery();
        while(rs.next()){
        patient_id.setText(rs.getString("Paient_ID"));
        patientname.setText(rs.getString("Full_Name"));
        jDateChooser1.setDate(rs.getDate("DateOfBirth"));
        patientaddress.setText(rs.getString("Address"));
        patientroom.setText(rs.getString("Room_Number"));
        patientmobile.setText(rs.getString("Mobile"));
        patientdisease.setText(rs.getString("Disease"));
        patientdocid.setText(rs.getString("Doctor_ID"));
        patientdocname.setText(rs.getString("Doctor_Name"));
        }
         }
        catch(Exception ex){
        JOptionPane.showMessageDialog(null, "ERROR OCCURED");
    }                                        
    }//GEN-LAST:event_jButton18ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
          try{
         String user = "root";
        String password = "";
         String url = "jdbc:mysql://localhost:3306/javaDatabase";
        Class.forName("com.mysql.jdbc.Driver");
        String delpat = patient_id.getText();
        Connection con = DriverManager.getConnection(url, user, password);
        String query = "delete from AddPatient3 where Paient_ID ="+delpat;
        PreparedStatement pst = con.prepareStatement(query);
        pst.executeUpdate();
        JOptionPane.showMessageDialog(null, "Successfully deleted");
        }
        catch(Exception e){
        JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        // TODO add your handling code here:
         patient_id.setText("");
        patientname.setText("");
        jDateChooser1.setDate(null);
        patientaddress.setText("");
        patientroom.setText("");
        patientmobile.setText("");
        patientdisease.setText("");
        patientdocid.setText("");
        patientdocname.setText("");
    }//GEN-LAST:event_jButton12ActionPerformed

    private void patient_idKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_patient_idKeyReleased
        // TODO add your handling code here:
         String pattern = "[0-9]{0,30}$";
        Pattern patt = Pattern.compile(pattern);
        Matcher match = patt.matcher(patient_id.getText());
        if(!match.matches()){
        iderror.setText("Incorrect format");
        }else{
        iderror.setText(null);
        } 
    }//GEN-LAST:event_patient_idKeyReleased

    private void patientnameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_patientnameKeyReleased
        // TODO add your handling code here:
         String pattern = "[a-zA-Z0-9 ,]{0,50}$";
        Pattern patt = Pattern.compile(pattern);
        Matcher match = patt.matcher(patientname.getText());
        if(!match.matches()){
        namerror.setText("Incorrect format");
        }else{
        namerror.setText(null);
        } 
    }//GEN-LAST:event_patientnameKeyReleased

    private void patientaddressKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_patientaddressKeyReleased
        // TODO add your handling code here:
         String pattern = "[a-zA-Z0-9 ,]{0,50}$";
        Pattern patt = Pattern.compile(pattern);
        Matcher match = patt.matcher(patientaddress.getText());
        if(!match.matches()){
        aderror.setText("Incorrect format");
        }else{
        aderror.setText(null);
        } 
    }//GEN-LAST:event_patientaddressKeyReleased

    private void patientroomKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_patientroomKeyReleased
        // TODO add your handling code here
        String pattern = "[0-9]{0,20}$";
        Pattern patt = Pattern.compile(pattern);
        Matcher match = patt.matcher(patientroom.getText());
        if(!match.matches()){
        rerror.setText("Incorrect format");
        }else{
        rerror.setText(null);
        } 
    }//GEN-LAST:event_patientroomKeyReleased

    private void patientmobileKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_patientmobileKeyReleased
        // TODO add your handling code here:
        String pattern = "[0-9]{0,30}$";
        Pattern patt = Pattern.compile(pattern);
        Matcher match = patt.matcher(patientmobile.getText());
        if(!match.matches()){
        merror.setText("Incorrect format");
        }else{
        merror.setText(null);
        } 
    }//GEN-LAST:event_patientmobileKeyReleased

    private void patientdiseaseKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_patientdiseaseKeyReleased
        // TODO add your handling code here:
        String pattern = "[a-zA-Z0-9 ,]{0,50}$";
        Pattern patt = Pattern.compile(pattern);
        Matcher match = patt.matcher(patientdisease.getText());
        if(!match.matches()){
        derror.setText("Incorrect format");
        }else{
        derror.setText(null);
        } 
    }//GEN-LAST:event_patientdiseaseKeyReleased

    private void patientdocidKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_patientdocidKeyReleased
        // TODO add your handling code here:
        String pattern = "[0-9]{0,20}$";
        Pattern patt = Pattern.compile(pattern);
        Matcher match = patt.matcher(patientdocid.getText());
        if(!match.matches()){
        diderror.setText("Incorrect format");
        }else{
        diderror.setText(null);
        } 
    }//GEN-LAST:event_patientdocidKeyReleased

    private void patientdocnameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_patientdocnameKeyReleased
        // TODO add your handling code here:
        String pattern = "[a-zA-Z0-9 ,]{0,50}$";
        Pattern patt = Pattern.compile(pattern);
        Matcher match = patt.matcher(patientdocname.getText());
        if(!match.matches()){
        dname.setText("Incorrect format");
        }else{
        dname.setText(null);
        } 
    }//GEN-LAST:event_patientdocnameKeyReleased

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        // TODO add your handling code here:
        RepViewPatient rp = new RepViewPatient();
        this.dispose();
    }//GEN-LAST:event_jButton14ActionPerformed

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
        // TODO add your handling code here:
        RepViewAppointment rep = new RepViewAppointment();
        this.dispose();
    }//GEN-LAST:event_jButton15ActionPerformed

    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton16ActionPerformed
        // TODO add your handling code here:
        RepViewAttend rva =new RepViewAttend();
        this.dispose();
    }//GEN-LAST:event_jButton16ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ReceptionistDashBoard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ReceptionistDashBoard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ReceptionistDashBoard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ReceptionistDashBoard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ReceptionistDashBoard().setVisible(true);
            }
        });
    }
     public void changePanel(JPanel panel)
    {
    layeredpane.removeAll();
   layeredpane.add(panel);
   layeredpane.repaint();
   layeredpane.revalidate();
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel aderror;
    private javax.swing.JTextField appoing_age;
    private javax.swing.JButton appoint_add;
    private javax.swing.JTextField appoint_address;
    private javax.swing.JButton appoint_delete;
    private javax.swing.JTextField appoint_docid;
    private javax.swing.JTextField appoint_docname;
    private javax.swing.JTextField appoint_email;
    private javax.swing.JTextField appoint_firstname;
    private javax.swing.JRadioButton appoint_genderF;
    private javax.swing.JRadioButton appoint_genderM;
    private javax.swing.JTextField appoint_lastname;
    private javax.swing.JTextField appoint_mobile;
    private javax.swing.JButton appoint_reset;
    private javax.swing.JButton appoint_update;
    private javax.swing.JPanel appointmentpanel;
    private javax.swing.JTextField attend_date;
    private javax.swing.JTextField attend_name;
    private javax.swing.JTextField attend_signin;
    private javax.swing.JTextField attend_signout;
    private javax.swing.JTextField attend_timein;
    private javax.swing.JTextField attend_timeout;
    private javax.swing.JTextField attend_title;
    private javax.swing.JPanel attendancepanel;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel date;
    private javax.swing.JLabel derror;
    private javax.swing.JLabel diderror;
    private javax.swing.JLabel dname;
    private javax.swing.JPanel homepanel;
    private javax.swing.JLabel iderror;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton18;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private com.toedter.calendar.JDateChooser jDateChooser2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JTable jTable1;
    private javax.swing.JLayeredPane layeredpane;
    private javax.swing.JLabel merror;
    private javax.swing.JLabel namerror;
    private javax.swing.JTextField patient_id;
    private javax.swing.JLabel patient_name;
    private javax.swing.JTextField patientaddress;
    private javax.swing.JTextField patientdisease;
    private javax.swing.JTextField patientdocid;
    private javax.swing.JTextField patientdocname;
    private javax.swing.JTextField patientmobile;
    private javax.swing.JTextField patientname;
    private javax.swing.JPanel patientpanel;
    private javax.swing.JTextField patientroom;
    private javax.swing.JLabel rerror;
    private javax.swing.JPanel viewpanel;
    // End of variables declaration//GEN-END:variables
private String Gender;
}
