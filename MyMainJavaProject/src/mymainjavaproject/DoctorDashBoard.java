/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mymainjavaproject;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;

/**
 *
 * @author Leo
 */
public class DoctorDashBoard extends javax.swing.JFrame {

    /**
     * Creates new form DoctorDashBoard
     */
    public DoctorDashBoard() {
        initComponents();
        setVisible(true);
        setLocationRelativeTo(null);
        setTitle("Doctor Dashboard");
        setResizable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        wlc = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        dochome = new javax.swing.JButton();
        docpatient = new javax.swing.JButton();
        docprescription = new javax.swing.JButton();
        doctest = new javax.swing.JButton();
        docview = new javax.swing.JButton();
        layeredpane = new javax.swing.JLayeredPane();
        doctorhompanel = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        doctorpatientpanel = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        docpatientid = new javax.swing.JTextField();
        docpatientname = new javax.swing.JTextField();
        docpatientaddress = new javax.swing.JTextField();
        docpatientroom = new javax.swing.JTextField();
        docpatientmobile = new javax.swing.JTextField();
        docpatientdisease = new javax.swing.JTextField();
        docpatientdocid = new javax.swing.JTextField();
        docpatientdocname = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jDateChooser2 = new com.toedter.calendar.JDateChooser();
        jButton29 = new javax.swing.JButton();
        docperror = new javax.swing.JLabel();
        docpname = new javax.swing.JLabel();
        docpaddress = new javax.swing.JLabel();
        docproom = new javax.swing.JLabel();
        docpmobile = new javax.swing.JLabel();
        docpdisease = new javax.swing.JLabel();
        docpdocid = new javax.swing.JLabel();
        docpdocname = new javax.swing.JLabel();
        doctorprescriptionpanel = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        doctorpatientid = new javax.swing.JTextField();
        doctorpatientname = new javax.swing.JTextField();
        dateissue = new com.toedter.calendar.JDateChooser();
        mobile = new javax.swing.JTextField();
        docid = new javax.swing.JTextField();
        docname = new javax.swing.JTextField();
        jSeparator7 = new javax.swing.JSeparator();
        jLabel33 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        prescription = new javax.swing.JTextArea();
        jSeparator8 = new javax.swing.JSeparator();
        jButton11 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        jButton14 = new javax.swing.JButton();
        jButton15 = new javax.swing.JButton();
        iderror = new javax.swing.JLabel();
        namerror = new javax.swing.JLabel();
        mobileerror = new javax.swing.JLabel();
        dociderror = new javax.swing.JLabel();
        docnamerror = new javax.swing.JLabel();
        doctortestpanel = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        testpatientid = new javax.swing.JTextField();
        testpatientname = new javax.swing.JTextField();
        testpatientage = new javax.swing.JTextField();
        jSeparator5 = new javax.swing.JSeparator();
        bio = new javax.swing.JCheckBox();
        blood = new javax.swing.JCheckBox();
        stool = new javax.swing.JCheckBox();
        colon = new javax.swing.JCheckBox();
        gast = new javax.swing.JCheckBox();
        urine = new javax.swing.JCheckBox();
        xray = new javax.swing.JCheckBox();
        sono = new javax.swing.JCheckBox();
        egg = new javax.swing.JCheckBox();
        jLabel26 = new javax.swing.JLabel();
        other = new javax.swing.JTextField();
        jSeparator6 = new javax.swing.JSeparator();
        jButton7 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton16 = new javax.swing.JButton();
        testdate = new com.toedter.calendar.JDateChooser();
        paiderror = new javax.swing.JLabel();
        paidname = new javax.swing.JLabel();
        paidage = new javax.swing.JLabel();
        paidother = new javax.swing.JLabel();
        jButton8 = new javax.swing.JButton();
        docviewpanel = new javax.swing.JPanel();
        jLabel34 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jButton26 = new javax.swing.JButton();
        jButton27 = new javax.swing.JButton();
        jButton28 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(0, 102, 102));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel5.setFont(new java.awt.Font("Arial Black", 1, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("ROYAL+ HOSPITAL");
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 20, 280, -1));

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mymainjavaproject/images/No Shellfish_52px_1.png"))); // NOI18N
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 10, -1, -1));

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mymainjavaproject/images/Administrator Male_52px.png"))); // NOI18N
        jPanel2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(1010, 10, -1, -1));

        jButton1.setFont(new java.awt.Font("Times New Roman", 3, 12)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Log out?");
        jButton1.setBorder(null);
        jButton1.setContentAreaFilled(false);
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1070, 40, -1, -1));

        wlc.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        wlc.setForeground(new java.awt.Color(255, 255, 255));
        wlc.setText("Welcome Doctor");
        jPanel2.add(wlc, new org.netbeans.lib.awtextra.AbsoluteConstraints(1060, 10, 160, 20));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1409, 80));

        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mymainjavaproject/images/doc1.jpg"))); // NOI18N
        jPanel3.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 350, 140));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mymainjavaproject/images/doc3.jpg"))); // NOI18N
        jPanel3.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 0, 370, 140));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mymainjavaproject/images/doc4.jpg"))); // NOI18N
        jPanel3.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 0, 370, 140));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mymainjavaproject/images/doc5.jpg"))); // NOI18N
        jPanel3.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(1070, 0, 350, 140));

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 86, 1409, 138));

        jPanel4.setBackground(new java.awt.Color(0, 102, 102));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        dochome.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        dochome.setForeground(new java.awt.Color(255, 255, 255));
        dochome.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mymainjavaproject/images/Home_20px_1.png"))); // NOI18N
        dochome.setText("HOME");
        dochome.setBorder(null);
        dochome.setContentAreaFilled(false);
        dochome.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        dochome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dochomeActionPerformed(evt);
            }
        });
        jPanel4.add(dochome, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 10, -1, -1));

        docpatient.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        docpatient.setForeground(new java.awt.Color(255, 255, 255));
        docpatient.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mymainjavaproject/images/Plus Math_20px.png"))); // NOI18N
        docpatient.setText("PATIENT");
        docpatient.setBorder(null);
        docpatient.setContentAreaFilled(false);
        docpatient.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        docpatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                docpatientActionPerformed(evt);
            }
        });
        jPanel4.add(docpatient, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 10, -1, -1));

        docprescription.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        docprescription.setForeground(new java.awt.Color(255, 255, 255));
        docprescription.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mymainjavaproject/images/Plus Math_20px.png"))); // NOI18N
        docprescription.setText("PRESCRIPTION");
        docprescription.setBorder(null);
        docprescription.setContentAreaFilled(false);
        docprescription.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        docprescription.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                docprescriptionActionPerformed(evt);
            }
        });
        jPanel4.add(docprescription, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 10, 130, -1));

        doctest.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        doctest.setForeground(new java.awt.Color(255, 255, 255));
        doctest.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mymainjavaproject/images/Plus Math_20px.png"))); // NOI18N
        doctest.setText("TEST");
        doctest.setBorder(null);
        doctest.setContentAreaFilled(false);
        doctest.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        doctest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doctestActionPerformed(evt);
            }
        });
        jPanel4.add(doctest, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 10, -1, -1));

        docview.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        docview.setForeground(new java.awt.Color(255, 255, 255));
        docview.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mymainjavaproject/images/Visible_20px.png"))); // NOI18N
        docview.setText("VIEW");
        docview.setBorder(null);
        docview.setContentAreaFilled(false);
        docview.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        docview.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                docviewActionPerformed(evt);
            }
        });
        jPanel4.add(docview, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 10, 70, -1));

        jPanel1.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 230, 1409, 48));

        layeredpane.setLayout(new java.awt.CardLayout());

        doctorhompanel.setBackground(new java.awt.Color(51, 51, 51));
        doctorhompanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 4));
        doctorhompanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mymainjavaproject/images/nurse3.jpg"))); // NOI18N
        jLabel10.setText("jLabel10");
        doctorhompanel.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 960, 460));

        layeredpane.add(doctorhompanel, "card2");

        doctorpatientpanel.setBackground(new java.awt.Color(51, 51, 51));
        doctorpatientpanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 4));
        doctorpatientpanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel9.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("ADD NEW PATIENT");
        doctorpatientpanel.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 20, -1, -1));
        doctorpatientpanel.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, 930, 10));

        jLabel11.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Patient_ID:");
        doctorpatientpanel.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 80, -1, -1));

        jLabel12.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Full_Name:");
        doctorpatientpanel.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 140, -1, -1));

        jLabel13.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Date of Birth:");
        doctorpatientpanel.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 200, -1, -1));

        jLabel14.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("Address:");
        doctorpatientpanel.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 260, -1, -1));

        jLabel15.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("Room_Number:");
        doctorpatientpanel.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 310, 110, 20));

        jLabel16.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("Mobile:");
        doctorpatientpanel.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 80, -1, -1));

        jLabel17.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText("Disease:");
        doctorpatientpanel.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 130, -1, -1));

        jLabel18.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setText("Doctor_ID:");
        doctorpatientpanel.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 190, -1, -1));

        jLabel19.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 255, 255));
        jLabel19.setText("Doctor_Name:");
        doctorpatientpanel.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 250, -1, -1));

        docpatientid.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        docpatientid.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                docpatientidKeyReleased(evt);
            }
        });
        doctorpatientpanel.add(docpatientid, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 70, 60, 30));

        docpatientname.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        docpatientname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                docpatientnameKeyReleased(evt);
            }
        });
        doctorpatientpanel.add(docpatientname, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 140, 140, -1));

        docpatientaddress.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        docpatientaddress.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                docpatientaddressKeyReleased(evt);
            }
        });
        doctorpatientpanel.add(docpatientaddress, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 260, 140, -1));

        docpatientroom.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        docpatientroom.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                docpatientroomKeyReleased(evt);
            }
        });
        doctorpatientpanel.add(docpatientroom, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 310, 140, -1));

        docpatientmobile.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        docpatientmobile.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                docpatientmobileKeyReleased(evt);
            }
        });
        doctorpatientpanel.add(docpatientmobile, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 80, 140, -1));

        docpatientdisease.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        docpatientdisease.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                docpatientdiseaseKeyReleased(evt);
            }
        });
        doctorpatientpanel.add(docpatientdisease, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 130, 140, -1));

        docpatientdocid.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        docpatientdocid.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                docpatientdocidKeyReleased(evt);
            }
        });
        doctorpatientpanel.add(docpatientdocid, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 190, 140, -1));

        docpatientdocname.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        docpatientdocname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                docpatientdocnameKeyReleased(evt);
            }
        });
        doctorpatientpanel.add(docpatientdocname, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 250, 140, -1));
        doctorpatientpanel.add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 360, 930, 10));

        jButton3.setBackground(new java.awt.Color(51, 51, 51));
        jButton3.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("ADD");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        doctorpatientpanel.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 390, -1, -1));

        jButton4.setBackground(new java.awt.Color(51, 51, 51));
        jButton4.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("UPDATE");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        doctorpatientpanel.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 390, -1, -1));

        jButton5.setBackground(new java.awt.Color(51, 51, 51));
        jButton5.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        jButton5.setForeground(new java.awt.Color(255, 255, 255));
        jButton5.setText("DELETE");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        doctorpatientpanel.add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 390, -1, -1));

        jButton6.setBackground(new java.awt.Color(51, 51, 51));
        jButton6.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        jButton6.setForeground(new java.awt.Color(255, 255, 255));
        jButton6.setText("RESET");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        doctorpatientpanel.add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 390, -1, -1));

        jDateChooser2.setDateFormatString("yyy-MM-dd");
        doctorpatientpanel.add(jDateChooser2, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 200, 140, -1));

        jButton29.setBackground(new java.awt.Color(51, 51, 51));
        jButton29.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        jButton29.setForeground(new java.awt.Color(255, 255, 255));
        jButton29.setText("RETRIEVE");
        jButton29.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton29ActionPerformed(evt);
            }
        });
        doctorpatientpanel.add(jButton29, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 390, -1, -1));

        docperror.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        docperror.setForeground(new java.awt.Color(51, 255, 255));
        doctorpatientpanel.add(docperror, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 74, 120, 20));

        docpname.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        docpname.setForeground(new java.awt.Color(51, 255, 255));
        doctorpatientpanel.add(docpname, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 140, 130, 20));

        docpaddress.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        docpaddress.setForeground(new java.awt.Color(51, 255, 255));
        doctorpatientpanel.add(docpaddress, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 260, 130, 20));

        docproom.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        docproom.setForeground(new java.awt.Color(51, 255, 255));
        doctorpatientpanel.add(docproom, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 314, 120, 20));

        docpmobile.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        docpmobile.setForeground(new java.awt.Color(51, 255, 255));
        doctorpatientpanel.add(docpmobile, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 80, 110, 20));

        docpdisease.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        docpdisease.setForeground(new java.awt.Color(51, 255, 255));
        doctorpatientpanel.add(docpdisease, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 130, 110, 20));

        docpdocid.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        docpdocid.setForeground(new java.awt.Color(51, 255, 255));
        doctorpatientpanel.add(docpdocid, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 190, 110, 20));

        docpdocname.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        docpdocname.setForeground(new java.awt.Color(51, 255, 255));
        doctorpatientpanel.add(docpdocname, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 250, 110, 20));

        layeredpane.add(doctorpatientpanel, "card3");

        doctorprescriptionpanel.setBackground(new java.awt.Color(51, 51, 51));
        doctorprescriptionpanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 4));
        doctorprescriptionpanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel20.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(255, 255, 255));
        jLabel20.setText("PRESCRIPTION ENTRY FORM");
        doctorprescriptionpanel.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 20, -1, -1));
        doctorprescriptionpanel.add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 940, -1));

        jLabel27.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(255, 255, 255));
        jLabel27.setText("Full_Name:");
        doctorprescriptionpanel.add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 140, -1, -1));

        jLabel28.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        jLabel28.setForeground(new java.awt.Color(255, 255, 255));
        jLabel28.setText("Date_Issue:");
        doctorprescriptionpanel.add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 180, -1, -1));

        jLabel29.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        jLabel29.setForeground(new java.awt.Color(255, 255, 255));
        jLabel29.setText("Patient_ID:");
        doctorprescriptionpanel.add(jLabel29, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 90, -1, -1));

        jLabel30.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        jLabel30.setForeground(new java.awt.Color(255, 255, 255));
        jLabel30.setText("Mobile:");
        doctorprescriptionpanel.add(jLabel30, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 80, -1, -1));

        jLabel31.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        jLabel31.setForeground(new java.awt.Color(255, 255, 255));
        jLabel31.setText("Doctor_ID:");
        doctorprescriptionpanel.add(jLabel31, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 130, -1, -1));

        jLabel32.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        jLabel32.setForeground(new java.awt.Color(255, 255, 255));
        jLabel32.setText("Doctor_Name:");
        doctorprescriptionpanel.add(jLabel32, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 180, -1, -1));

        doctorpatientid.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        doctorpatientid.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                doctorpatientidKeyReleased(evt);
            }
        });
        doctorprescriptionpanel.add(doctorpatientid, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 80, 60, 30));

        doctorpatientname.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        doctorpatientname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                doctorpatientnameKeyReleased(evt);
            }
        });
        doctorprescriptionpanel.add(doctorpatientname, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 140, 150, -1));

        dateissue.setDateFormatString("yyy-MM-dd");
        doctorprescriptionpanel.add(dateissue, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 180, 150, -1));

        mobile.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        mobile.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                mobileKeyReleased(evt);
            }
        });
        doctorprescriptionpanel.add(mobile, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 80, 160, -1));

        docid.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        docid.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                docidKeyReleased(evt);
            }
        });
        doctorprescriptionpanel.add(docid, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 130, 160, -1));

        docname.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        docname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                docnameKeyReleased(evt);
            }
        });
        doctorprescriptionpanel.add(docname, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 180, 160, -1));
        doctorprescriptionpanel.add(jSeparator7, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 212, 750, 10));

        jLabel33.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        jLabel33.setForeground(new java.awt.Color(255, 255, 255));
        jLabel33.setText("DRUGS PRESCRIBED");
        doctorprescriptionpanel.add(jLabel33, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 220, -1, -1));

        prescription.setColumns(20);
        prescription.setFont(new java.awt.Font("Times New Roman", 3, 16)); // NOI18N
        prescription.setRows(5);
        jScrollPane1.setViewportView(prescription);

        doctorprescriptionpanel.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 240, 260, 130));
        doctorprescriptionpanel.add(jSeparator8, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 380, 940, 10));

        jButton11.setBackground(new java.awt.Color(51, 51, 51));
        jButton11.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        jButton11.setForeground(new java.awt.Color(255, 255, 255));
        jButton11.setText("ADD");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });
        doctorprescriptionpanel.add(jButton11, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 410, -1, -1));

        jButton13.setBackground(new java.awt.Color(51, 51, 51));
        jButton13.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        jButton13.setForeground(new java.awt.Color(255, 255, 255));
        jButton13.setText("DELETE");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });
        doctorprescriptionpanel.add(jButton13, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 410, -1, -1));

        jButton14.setBackground(new java.awt.Color(51, 51, 51));
        jButton14.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        jButton14.setForeground(new java.awt.Color(255, 255, 255));
        jButton14.setText("RESET");
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });
        doctorprescriptionpanel.add(jButton14, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 410, -1, -1));

        jButton15.setBackground(new java.awt.Color(51, 51, 51));
        jButton15.setFont(new java.awt.Font("Arial Black", 1, 16)); // NOI18N
        jButton15.setForeground(new java.awt.Color(255, 255, 255));
        jButton15.setText("RETRIEVE");
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });
        doctorprescriptionpanel.add(jButton15, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 410, -1, -1));

        iderror.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        iderror.setForeground(new java.awt.Color(51, 255, 255));
        doctorprescriptionpanel.add(iderror, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 90, 120, 20));

        namerror.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        namerror.setForeground(new java.awt.Color(51, 255, 255));
        doctorprescriptionpanel.add(namerror, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 144, 120, 20));

        mobileerror.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        mobileerror.setForeground(new java.awt.Color(51, 255, 255));
        doctorprescriptionpanel.add(mobileerror, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 80, 130, 20));

        dociderror.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        dociderror.setForeground(new java.awt.Color(51, 255, 255));
        doctorprescriptionpanel.add(dociderror, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 134, 140, 20));

        docnamerror.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        docnamerror.setForeground(new java.awt.Color(51, 255, 255));
        doctorprescriptionpanel.add(docnamerror, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 180, 140, 20));

        layeredpane.add(doctorprescriptionpanel, "card4");

        doctortestpanel.setBackground(new java.awt.Color(51, 51, 51));
        doctortestpanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 4));
        doctortestpanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel21.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(255, 255, 255));
        jLabel21.setText("TEST ENTRY FORM");
        doctortestpanel.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 20, -1, -1));
        doctortestpanel.add(jSeparator4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, 930, 10));

        jLabel22.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(255, 255, 255));
        jLabel22.setText("Patient_ID:");
        doctortestpanel.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 70, -1, -1));

        jLabel23.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(255, 255, 255));
        jLabel23.setText("Full_Name:");
        doctortestpanel.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 130, -1, -1));

        jLabel24.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(255, 255, 255));
        jLabel24.setText("Patient_Age:");
        doctortestpanel.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 70, -1, -1));

        jLabel25.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(255, 255, 255));
        jLabel25.setText("Test_Date:");
        doctortestpanel.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 130, -1, -1));

        testpatientid.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        testpatientid.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                testpatientidKeyReleased(evt);
            }
        });
        doctortestpanel.add(testpatientid, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 60, 70, 30));

        testpatientname.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        testpatientname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                testpatientnameKeyReleased(evt);
            }
        });
        doctortestpanel.add(testpatientname, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 130, 150, -1));

        testpatientage.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        testpatientage.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                testpatientageKeyReleased(evt);
            }
        });
        doctortestpanel.add(testpatientage, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 70, 150, -1));
        doctortestpanel.add(jSeparator5, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 160, 800, 10));

        bio.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        bio.setForeground(new java.awt.Color(255, 255, 255));
        bio.setText("Biochemistry");
        bio.setContentAreaFilled(false);
        doctortestpanel.add(bio, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 180, -1, -1));

        blood.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        blood.setForeground(new java.awt.Color(255, 255, 255));
        blood.setText("Blood");
        blood.setContentAreaFilled(false);
        doctortestpanel.add(blood, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 220, -1, -1));

        stool.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        stool.setForeground(new java.awt.Color(255, 255, 255));
        stool.setText("Stool");
        stool.setContentAreaFilled(false);
        doctortestpanel.add(stool, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 260, -1, -1));

        colon.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        colon.setForeground(new java.awt.Color(255, 255, 255));
        colon.setText("Colonscopy");
        colon.setContentAreaFilled(false);
        doctortestpanel.add(colon, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 180, -1, -1));

        gast.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        gast.setForeground(new java.awt.Color(255, 255, 255));
        gast.setText("Gastroscopy");
        gast.setContentAreaFilled(false);
        doctortestpanel.add(gast, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 220, -1, -1));

        urine.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        urine.setForeground(new java.awt.Color(255, 255, 255));
        urine.setText("Urine");
        urine.setContentAreaFilled(false);
        doctortestpanel.add(urine, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 260, -1, -1));

        xray.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        xray.setForeground(new java.awt.Color(255, 255, 255));
        xray.setText("X- RAY");
        xray.setContentAreaFilled(false);
        doctortestpanel.add(xray, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 180, -1, -1));

        sono.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        sono.setForeground(new java.awt.Color(255, 255, 255));
        sono.setText("Sonography");
        sono.setContentAreaFilled(false);
        doctortestpanel.add(sono, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 220, -1, -1));

        egg.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        egg.setForeground(new java.awt.Color(255, 255, 255));
        egg.setText("EGG");
        egg.setContentAreaFilled(false);
        doctortestpanel.add(egg, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 260, -1, -1));

        jLabel26.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(255, 255, 255));
        jLabel26.setText("Other:");
        doctortestpanel.add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 180, -1, -1));

        other.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        other.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                otherKeyReleased(evt);
            }
        });
        doctortestpanel.add(other, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 180, 140, -1));
        doctortestpanel.add(jSeparator6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 350, 920, 10));

        jButton7.setBackground(new java.awt.Color(51, 51, 51));
        jButton7.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        jButton7.setForeground(new java.awt.Color(255, 255, 255));
        jButton7.setText("ADD");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        doctortestpanel.add(jButton7, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 380, -1, -1));

        jButton9.setBackground(new java.awt.Color(51, 51, 51));
        jButton9.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        jButton9.setForeground(new java.awt.Color(255, 255, 255));
        jButton9.setText("DELETE");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        doctortestpanel.add(jButton9, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 380, -1, -1));

        jButton16.setBackground(new java.awt.Color(51, 51, 51));
        jButton16.setFont(new java.awt.Font("Arial Black", 1, 16)); // NOI18N
        jButton16.setForeground(new java.awt.Color(255, 255, 255));
        jButton16.setText("RETRIEVE");
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton16ActionPerformed(evt);
            }
        });
        doctortestpanel.add(jButton16, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 380, -1, -1));

        testdate.setDateFormatString("yyy-MM-dd");
        doctortestpanel.add(testdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 120, 150, 30));

        paiderror.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        paiderror.setForeground(new java.awt.Color(51, 255, 255));
        doctortestpanel.add(paiderror, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 70, 130, 20));

        paidname.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        paidname.setForeground(new java.awt.Color(51, 255, 255));
        doctortestpanel.add(paidname, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 130, 130, 20));

        paidage.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        paidage.setForeground(new java.awt.Color(51, 255, 255));
        doctortestpanel.add(paidage, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 70, 110, 20));

        paidother.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        paidother.setForeground(new java.awt.Color(51, 255, 255));
        doctortestpanel.add(paidother, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 220, 140, 20));

        jButton8.setBackground(new java.awt.Color(51, 51, 51));
        jButton8.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        jButton8.setForeground(new java.awt.Color(255, 255, 255));
        jButton8.setText("RESET");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        doctortestpanel.add(jButton8, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 380, -1, -1));

        layeredpane.add(doctortestpanel, "card5");

        docviewpanel.setBackground(new java.awt.Color(51, 51, 51));
        docviewpanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 4));
        docviewpanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel34.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mymainjavaproject/images/nurse1.jpg"))); // NOI18N
        docviewpanel.add(jLabel34, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 960, 460));

        layeredpane.add(docviewpanel, "card6");

        jPanel1.add(layeredpane, new org.netbeans.lib.awtextra.AbsoluteConstraints(256, 318, 960, 460));

        jPanel6.setBackground(new java.awt.Color(51, 51, 51));
        jPanel6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 102), 2));
        jPanel6.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton26.setBackground(new java.awt.Color(51, 51, 51));
        jButton26.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        jButton26.setForeground(new java.awt.Color(255, 255, 255));
        jButton26.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mymainjavaproject/images/Visible_20px.png"))); // NOI18N
        jButton26.setText("Patient");
        jButton26.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton26ActionPerformed(evt);
            }
        });
        jPanel6.add(jButton26, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 150, -1));

        jButton27.setBackground(new java.awt.Color(51, 51, 51));
        jButton27.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        jButton27.setForeground(new java.awt.Color(255, 255, 255));
        jButton27.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mymainjavaproject/images/Visible_20px.png"))); // NOI18N
        jButton27.setText("Prescription");
        jButton27.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton27ActionPerformed(evt);
            }
        });
        jPanel6.add(jButton27, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 160, 150, -1));

        jButton28.setBackground(new java.awt.Color(51, 51, 51));
        jButton28.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        jButton28.setForeground(new java.awt.Color(255, 255, 255));
        jButton28.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mymainjavaproject/images/Visible_20px.png"))); // NOI18N
        jButton28.setText("Test");
        jButton28.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton28ActionPerformed(evt);
            }
        });
        jPanel6.add(jButton28, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 330, 150, 30));

        jPanel1.add(jPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(1230, 410, 150, 360));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1399, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 834, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        DoctorSignIn ds = new DoctorSignIn();
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void dochomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dochomeActionPerformed
        // TODO add your handling code here:
        changePanel(doctorhompanel);
    }//GEN-LAST:event_dochomeActionPerformed

    private void docpatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_docpatientActionPerformed
        // TODO add your handling code here:
        changePanel(doctorpatientpanel);
    }//GEN-LAST:event_docpatientActionPerformed

    private void docprescriptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_docprescriptionActionPerformed
        // TODO add your handling code here:
        changePanel(doctorprescriptionpanel);
    }//GEN-LAST:event_docprescriptionActionPerformed

    private void doctestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doctestActionPerformed
        // TODO add your handling code here:
        changePanel(doctortestpanel);
    }//GEN-LAST:event_doctestActionPerformed

    private void docviewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_docviewActionPerformed
        // TODO add your handling code here:
        changePanel(docviewpanel);
    }//GEN-LAST:event_docviewActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
         try{
        String user = "root";
        String password = "";
         String url = "jdbc:mysql://localhost:3306/javaDatabase";
        Class.forName("com.mysql.jdbc.Driver");
        Connection con = DriverManager.getConnection(url, user, password);
        String qry = "insert into AddPatient2 (Full_Name, DateOfBirth, Address, Room_Number, Mobile, Disease, Doctor_ID, Doctor_Name) values(?,?,?,?,?,?,?,?)";
        PreparedStatement pst = con.prepareStatement(qry);
        //pst.setString(1, docpatientid.getText());
        pst.setString(1, docpatientname.getText());
        pst.setString(2, ((JTextField)jDateChooser2.getDateEditor().getUiComponent()).getText());
        pst.setString(3, docpatientaddress.getText());
        pst.setString(4, docpatientroom.getText());
        pst.setString(5, docpatientmobile.getText());
        pst.setString(6, docpatientdisease.getText());
        pst.setString(7, docpatientdocid.getText());
        pst.setString(8, docpatientdocname.getText());
//        if(docpatientid.getText().trim().equals("")){
//        JOptionPane.showMessageDialog(null, "Patient ID field must not be empty");
//        }
        if(docpatientname.getText().trim().equals("")){
        JOptionPane.showMessageDialog(null, "Patient name must not be empty");
        }
        else if(jDateChooser2.getDate().equals(null)){
        JOptionPane.showMessageDialog(null, "Date of birth field must not be empty");
        }
        else if(docpatientaddress.getText().trim().equals("")){
        JOptionPane.showMessageDialog(null, "Address field must not be empty");
        }
        else if(docpatientroom.getText().trim().equals("")){
        JOptionPane.showMessageDialog(null, "Patient Room number must not be empty");
        }
        else if(docpatientmobile.getText().trim().equals("")){
        JOptionPane.showMessageDialog(null, "Mobile field must not be empty");
        }
        else if(docpatientdisease.getText().trim().equals("")){
        JOptionPane.showMessageDialog(null, "Disease field must not be empty");
        }
        else if(docpatientdocid.getText().trim().equals("")){
        JOptionPane.showMessageDialog(null, "Doctor ID field must not be empty");
        }
        else if(docpatientdocname.getText().trim().equals("")){
        JOptionPane.showMessageDialog(null, "Doctor name field must not be empty");
        }
        else{
        pst.executeUpdate();
        JOptionPane.showMessageDialog(null, "Successfully Added");
        docpatientid.setText("");
        docpatientname.setText("");
        jDateChooser2.setDate(null);
        docpatientaddress.setText("");
        docpatientroom.setText("");
        docpatientmobile.setText("");
        docpatientdisease.setText("");
        docpatientdocid.setText("");
        docpatientdocname.setText("");
        }
        }
        catch(Exception e){
        JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton29ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton29ActionPerformed
        // TODO add your handling code here:
         try{
          String user = "root";
        String password = "";
         String url = "jdbc:mysql://localhost:3306/javaDatabase";
        Class.forName("com.mysql.jdbc.Driver");
        String dpid = docpatientid.getText();
        Connection con = DriverManager.getConnection(url, user, password);
        String qry = "select * from AddPatient2 where Patient_ID ="+dpid;
        PreparedStatement pst = con.prepareStatement(qry);
        ResultSet rs = pst.executeQuery();
        while(rs.next()){
         docpatientid.setText(rs.getString("Patient_ID"));
        docpatientname.setText(rs.getString("Full_Name"));
        jDateChooser2.setDate(rs.getDate("DateOfBirth"));
        docpatientaddress.setText(rs.getString("Address"));
        docpatientroom.setText(rs.getString("Room_Number"));
        docpatientmobile.setText(rs.getString("Mobile"));
        docpatientdisease.setText(rs.getString("Disease"));
        docpatientdocid.setText(rs.getString("Doctor_ID"));
        docpatientdocname.setText(rs.getString("Doctor_Name"));
        }
        }
        catch(Exception ex){
        JOptionPane.showMessageDialog(null, "ERROR OCCURED");
        }
    }//GEN-LAST:event_jButton29ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
         try{
        String user = "root";
        String password = "";
         String url = "jdbc:mysql://localhost:3306/javaDatabase";
        Class.forName("com.mysql.jdbc.Driver");
        String dpaid = docpatientid.getText();
        Connection con = DriverManager.getConnection(url, user, password);
        String qry = "update AddPatient2 set Full_Name=?, DateOfBirth=?, Address=?, Room_Number=?, Mobile=?, Disease=?, Doctor_ID=?, Doctor_Name=? where Patient_ID ="+dpaid;
        PreparedStatement pst = con.prepareStatement(qry);
       // pst.setString(1, patient_id.getText());
        pst.setString(1, docpatientname.getText());
        pst.setString(2, ((JTextField)jDateChooser2.getDateEditor().getUiComponent()).getText());
        pst.setString(3, docpatientaddress.getText());
        pst.setString(4, docpatientroom.getText());
        pst.setString(5, docpatientmobile.getText());
        pst.setString(6, docpatientdisease.getText());
        pst.setString(7, docpatientdocid.getText());
        pst.setString(8, docpatientdocname.getText());
        if(docpatientname.getText().trim().equals("")){
        JOptionPane.showMessageDialog(null, "Full name field must not be empty");
        }
        else if(jDateChooser2.getDate().equals(null)){
        JOptionPane.showMessageDialog(null, "Date of birth field must not be empty");
        }
        else if(docpatientaddress.getText().trim().equals("")){
        JOptionPane.showMessageDialog(null, "Address field must not be empty");
        }
        else if(docpatientroom.getText().trim().equals("")){
        JOptionPane.showMessageDialog(null, "Rooms number field must not be empty");
        }
        else if(docpatientmobile.getText().trim().equals("")){
        JOptionPane.showMessageDialog(null, "Mobile field must not be empty");
        }
        else if(docpatientdisease.getText().trim().equals("")){
        JOptionPane.showMessageDialog(null, "Patient disease field must not be empty");
        }
        else if(docpatientdocid.getText().trim().equals("")){
        JOptionPane.showMessageDialog(null, "Doctor ID must not be empty");
        }
        else if(docpatientdocname.getText().trim().equals("")){
        JOptionPane.showMessageDialog(null, "Doctor name must not be empty");
        }
        else{
        pst.executeUpdate();
        JOptionPane.showMessageDialog(null, "Successfully updated");
        docpatientid.setText("");
        docpatientname.setText("");
        jDateChooser2.setDate(null);
        docpatientaddress.setText("");
       docpatientroom.setText("");
       docpatientmobile.setText("");
       docpatientdisease.setText("");
       docpatientdocid.setText("");
       docpatientdocname.setText("");
        }
        }
        catch(Exception e){
        JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
          try{
         String user = "root";
        String password = "";
         String url = "jdbc:mysql://localhost:3306/javaDatabase";
        Class.forName("com.mysql.jdbc.Driver");
        String deletepat = docpatientid.getText();
        Connection con = DriverManager.getConnection(url, user, password);
        String query = "delete from AddPatient2 where Patient_ID ="+deletepat;
        PreparedStatement pst = con.prepareStatement(query);
        pst.executeUpdate();
        JOptionPane.showMessageDialog(null, "Successfully deleted");
        }
        catch(Exception e){
        JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
           docpatientid.setText("");
        docpatientname.setText("");
        jDateChooser2.setDate(null);
        docpatientaddress.setText("");
       docpatientroom.setText("");
       docpatientmobile.setText("");
       docpatientdisease.setText("");
       docpatientdocid.setText("");
       docpatientdocname.setText("");
    }//GEN-LAST:event_jButton6ActionPerformed

    private void docpatientidKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_docpatientidKeyReleased
        // TODO add your handling code here:
        String pattern = "[0-9]{0,30}$";
        Pattern patt = Pattern.compile(pattern);
        Matcher match = patt.matcher(docpatientid.getText());
        if(!match.matches()){
        docperror.setText("Incorrect format");
        }else{
        docperror.setText(null);
        } 
    }//GEN-LAST:event_docpatientidKeyReleased

    private void docpatientnameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_docpatientnameKeyReleased
        // TODO add your handling code here:
         String pattern = "[a-zA-Z0-9 ,]{0,30}$";
        Pattern patt = Pattern.compile(pattern);
        Matcher match = patt.matcher(docpatientname.getText());
        if(!match.matches()){
        docpname.setText("Incorrect format");
        }else{
        docpname.setText(null);
        } 
    }//GEN-LAST:event_docpatientnameKeyReleased

    private void docpatientaddressKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_docpatientaddressKeyReleased
        // TODO add your handling code here:
        String pattern = "[a-zA-Z0-9 ,]{0,50}$";
        Pattern patt = Pattern.compile(pattern);
        Matcher match = patt.matcher(docpatientaddress.getText());
        if(!match.matches()){
        docpaddress.setText("Incorrect format");
        }else{
        docpaddress.setText(null);
        } 
    }//GEN-LAST:event_docpatientaddressKeyReleased

    private void docpatientroomKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_docpatientroomKeyReleased
        // TODO add your handling code here:
        String pattern = "[0-9]{0,30}$";
        Pattern patt = Pattern.compile(pattern);
        Matcher match = patt.matcher(docpatientroom.getText());
        if(!match.matches()){
        docproom.setText("Incorrect format");
        }else{
        docproom.setText(null);
        } 
    }//GEN-LAST:event_docpatientroomKeyReleased

    private void docpatientmobileKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_docpatientmobileKeyReleased
        // TODO add your handling code here:
          String pattern = "[0-9]{0,30}$";
        Pattern patt = Pattern.compile(pattern);
        Matcher match = patt.matcher(docpatientmobile.getText());
        if(!match.matches()){
        docpmobile.setText("Incorrect format");
        }else{
        docpmobile.setText(null);
        } 
    }//GEN-LAST:event_docpatientmobileKeyReleased

    private void docpatientdiseaseKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_docpatientdiseaseKeyReleased
        // TODO add your handling code here:
          String pattern = "[a-zA-Z0-9]{0,30}$";
        Pattern patt = Pattern.compile(pattern);
        Matcher match = patt.matcher(docpatientdisease.getText());
        if(!match.matches()){
        docpdisease.setText("Incorrect format");
        }else{
        docpdisease.setText(null);
        } 
    }//GEN-LAST:event_docpatientdiseaseKeyReleased

    private void docpatientdocidKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_docpatientdocidKeyReleased
        // TODO add your handling code here:
          String pattern = "[a-zA-Z0-9 ,]{0,30}$";
        Pattern patt = Pattern.compile(pattern);
        Matcher match = patt.matcher(docpatientdocid.getText());
        if(!match.matches()){
        docpdocid.setText("Incorrect format");
        }else{
        docpdocid.setText(null);
        } 
    }//GEN-LAST:event_docpatientdocidKeyReleased

    private void docpatientdocnameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_docpatientdocnameKeyReleased
        // TODO add your handling code here:
          String pattern = "[a-zA-Z0-9 ,]{0,30}$";
        Pattern patt = Pattern.compile(pattern);
        Matcher match = patt.matcher(docpatientdocname.getText());
        if(!match.matches()){
        docpdocname.setText("Incorrect format");
        }else{
        docpdocname.setText(null);
        } 
    }//GEN-LAST:event_docpatientdocnameKeyReleased

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        // TODO add your handling code here:
        try{
           String user = "root";
        String password = "";
         String url = "jdbc:mysql://localhost:3306/javaDatabase";
        Class.forName("com.mysql.jdbc.Driver");
        Connection con = DriverManager.getConnection(url, user, password);
        String query = "insert into Prescription(Patient_ID, Full_Name, Date_Issue,Mobile, Doctor_ID, Doctor_Name, Drug_Prescribed\n) values(?,?,?,?,?,?,?)";
        PreparedStatement pst = con.prepareStatement(query);
        pst.setString(1, doctorpatientid.getText());
        pst.setString(2, doctorpatientname.getText());
        pst.setString(3, ((JTextField)dateissue.getDateEditor().getUiComponent()).getText());
        pst.setString(4, mobile.getText());
        pst.setString(5, docid.getText());
        pst.setString(6, docname.getText());
        pst.setString(7, prescription.getText());
        if(doctorpatientname.getText().trim().equals("")){
        JOptionPane.showMessageDialog(null, "You must enter a patient name");
        }
        else if(dateissue.getDate().equals(null)){
        JOptionPane.showMessageDialog(null, "You must enter an ussue date");
        }
        else if(mobile.getText().trim().equals("")){
        JOptionPane.showMessageDialog(null, "You must enter patient phone number");
        }
        else if(docid.getText().trim().equals("")){
        JOptionPane.showMessageDialog(null, "You must enter doctor ID");
        }
        else if(docname.getText().trim().equals("")){
        JOptionPane.showMessageDialog(null, "You must enter doctor name");
        }
        else if(prescription.getText().trim().equals("")){
        JOptionPane.showMessageDialog(null, "You must enter prescribed drug(s)");
        }
        else{
        pst.executeUpdate();
        JOptionPane.showMessageDialog(null, "Successfully Added");
        doctorpatientid.setText("");
        doctorpatientname.setText("");
       dateissue.setDate(null);
       mobile.setText("");
       docid.setText("");
       docname.setText("");
       prescription.setText("");
        }
        }
        catch(Exception e){
        JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
        // TODO add your handling code here:
                try{
          String user = "root";
        String password = "";
         String url = "jdbc:mysql://localhost:3306/javaDatabase";
        Class.forName("com.mysql.jdbc.Driver");
        String docpid = doctorpatientid.getText();
        Connection con = DriverManager.getConnection(url, user, password);
        String qry = "select * from Prescription where Patient_ID ="+docpid;
        PreparedStatement pst = con.prepareStatement(qry);
        ResultSet rs = pst.executeQuery();
        while(rs.next()){
         doctorpatientid.setText(rs.getString("Patient_ID"));
        doctorpatientname.setText(rs.getString("Full_Name"));
        dateissue.setDate(rs.getDate("Date_Issue"));
        mobile.setText(rs.getString("Mobile"));
        docid.setText(rs.getString("Doctor_ID"));
        docname.setText(rs.getString("Doctor_Name"));
        prescription.setText(rs.getString("Drug_Prescribed"));
        }
        }
        catch(Exception ex){
        JOptionPane.showMessageDialog(null, "ERROR OCCURED");
        }
    }//GEN-LAST:event_jButton15ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        // TODO add your handling code here:
          try{
         String user = "root";
        String password = "";
         String url = "jdbc:mysql://localhost:3306/javaDatabase";
        Class.forName("com.mysql.jdbc.Driver");
        String deletepat = doctorpatientid.getText();
        Connection con = DriverManager.getConnection(url, user, password);
        String query = "delete from Prescription where Patient_ID ="+deletepat;
        PreparedStatement pst = con.prepareStatement(query);
        pst.executeUpdate();
        JOptionPane.showMessageDialog(null, "Successfully deleted");
        }
        catch(Exception e){
        JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        // TODO add your handling code here:
          doctorpatientid.setText("");
        doctorpatientname.setText("");
       dateissue.setDate(null);
       mobile.setText("");
       docid.setText("");
       docname.setText("");
       prescription.setText("");
    }//GEN-LAST:event_jButton14ActionPerformed

    private void doctorpatientidKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_doctorpatientidKeyReleased
        // TODO add your handling code here:
        String pattern = "[0-9]{0,30}$";
        Pattern patt = Pattern.compile(pattern);
        Matcher match = patt.matcher(doctorpatientid.getText());
        if(!match.matches()){
        iderror.setText("Incorrect format");
        }else{
        iderror.setText(null);
        } 
    }//GEN-LAST:event_doctorpatientidKeyReleased

    private void doctorpatientnameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_doctorpatientnameKeyReleased
        // TODO add your handling code here:
        String pattern = "[a-zA-Z0-9 ,]{0,30}$";
        Pattern patt = Pattern.compile(pattern);
        Matcher match = patt.matcher(doctorpatientname.getText());
        if(!match.matches()){
        namerror.setText("Incorrect format");
        }else{
        namerror.setText(null);
        } 
    }//GEN-LAST:event_doctorpatientnameKeyReleased

    private void mobileKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_mobileKeyReleased
        // TODO add your handling code here:
        String pattern = "[0-9]{0,30}$";
        Pattern patt = Pattern.compile(pattern);
        Matcher match = patt.matcher(mobile.getText());
        if(!match.matches()){
        mobileerror.setText("Incorrect format");
        }else{
        mobileerror.setText(null);
        } 
    }//GEN-LAST:event_mobileKeyReleased

    private void docidKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_docidKeyReleased
        // TODO add your handling code here:
         String pattern = "[0-9]{0,30}$";
        Pattern patt = Pattern.compile(pattern);
        Matcher match = patt.matcher(docid.getText());
        if(!match.matches()){
        dociderror.setText("Incorrect format");
        }else{
        dociderror.setText(null);
        } 
        
    }//GEN-LAST:event_docidKeyReleased

    private void docnameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_docnameKeyReleased
        // TODO add your handling code here:
         String pattern = "[a-zA-Z0-9 ,]{0,30}$";
        Pattern patt = Pattern.compile(pattern);
        Matcher match = patt.matcher(docname.getText());
        if(!match.matches()){
        docnamerror.setText("Incorrect format");
        }else{
        docnamerror.setText(null);
        } 
    }//GEN-LAST:event_docnameKeyReleased

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        try{
         String user = "root";
        String password = "";
        String url = "jdbc:mysql://localhost:3306/javaDatabase";
        Class.forName("com.mysql.jdbc.Driver");
        Connection con = DriverManager.getConnection(url, user, password);
        String qry = "insert into Test (Patient_ID, Full_Name, Test_Type, Patient_Age, Test_Date, Other)values(?,?,?,?,?,?)";
        PreparedStatement pst = con.prepareStatement(qry);
        pst.setString(1,testpatientid.getText() );
        pst.setString(2, testpatientname.getText());
        String Test_Type = "";
        if(bio.isSelected()){
        Test_Type +=bio.getText()+" ";
        }
        if(blood.isSelected()){
        Test_Type +=blood.getText()+" ";
        }
        if(stool.isSelected()){
        Test_Type +=stool.getText()+ " ";
        }
        if(colon.isSelected()){
        Test_Type +=colon.getText()+" ";
        }
        if(gast.isSelected()){
        Test_Type +=gast.getText()+" ";
        }
        if(urine.isSelected()){
        Test_Type += urine.getText()+ " ";
        }
        if(xray.isSelected()){
        Test_Type += xray.getText()+" ";
        }
        if(sono.isSelected()){
        Test_Type += sono.getText()+" ";
        }
        if(egg.isSelected()){
        Test_Type += egg.getText()+" ";
        }
        pst.setString(3, Test_Type);
        pst.setString(4, testpatientage.getText());
        pst.setString(5, ((JTextField)testdate.getDateEditor().getUiComponent()).getText());
        pst.setString(6, other.getText());
        if(testpatientid.getText().trim().equals("")){
        JOptionPane.showMessageDialog(null, "ID field must not be empty");
        }
        else if(testpatientname.getText().trim().equals("")){
        JOptionPane.showMessageDialog(null, "Full name field must not be empty");
        }
        else if(testpatientage.getText().trim().equals("")){
        JOptionPane.showMessageDialog(null, "You must enter patient age");
        }
        else{
        pst.executeUpdate();
        JOptionPane.showMessageDialog(null, "Successfully added");
        testpatientid.setText("");
        testpatientname.setText("");
        testpatientage.setText("");
        testdate.setDate(null);
        other.setText("");
        }
        }
        catch(Exception e){
        JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void testpatientidKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_testpatientidKeyReleased
        // TODO add your handling code here:
        String pattern = "[0-9]{0,30}$";
        Pattern patt = Pattern.compile(pattern);
        Matcher match = patt.matcher(testpatientid.getText());
        if(!match.matches()){
        paiderror.setText("Incorrect format");
        }else{
        paiderror.setText(null);
        } 
    }//GEN-LAST:event_testpatientidKeyReleased

    private void testpatientnameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_testpatientnameKeyReleased
        // TODO add your handling code here:
         String pattern = "[a-zA-Z0-9 ,]{0,30}$";
        Pattern patt = Pattern.compile(pattern);
        Matcher match = patt.matcher(testpatientname.getText());
        if(!match.matches()){
        paidname.setText("Incorrect format");
        }else{
        paidname.setText(null);
        } 
    }//GEN-LAST:event_testpatientnameKeyReleased

    private void testpatientageKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_testpatientageKeyReleased
        // TODO add your handling code here:
         String pattern = "[0-9]{0,30}$";
        Pattern patt = Pattern.compile(pattern);
        Matcher match = patt.matcher(testpatientage.getText());
        if(!match.matches()){
        paidage.setText("Incorrect format");
        }else{
        paidage.setText(null);
        } 
    }//GEN-LAST:event_testpatientageKeyReleased

    private void otherKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_otherKeyReleased
        // TODO add your handling code here:
        String pattern = "[a-zA-Z0-9 ,]{0,30}$";
        Pattern patt = Pattern.compile(pattern);
        Matcher match = patt.matcher(other.getText());
        if(!match.matches()){
        paidother.setText("Incorrect format");
        }else{
        paidother.setText(null);
        } 
    }//GEN-LAST:event_otherKeyReleased

    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton16ActionPerformed
        // TODO add your handling code here:
         try{
        String user = "root";
        String password = "";
         String url = "jdbc:mysql://localhost:3306/javaDatabase";
        Class.forName("com.mysql.jdbc.Driver");
        String docpaid = testpatientid.getText();
        Connection con = DriverManager.getConnection(url, user, password);
        String qry = "select * from Test where Patient_ID ="+docpaid;
        PreparedStatement pst = con.prepareStatement(qry);
        ResultSet rs = pst.executeQuery();
        while(rs.next()){
         testpatientid.setText(rs.getString("Patient_ID"));
        testpatientname.setText(rs.getString("Full_Name"));
        testpatientage.setText(rs.getString("Patient_Age"));
        testdate.setDate(rs.getDate("Test_Date"));
        other.setText(rs.getString("Other"));
        }
        }
        catch(Exception ex){
        JOptionPane.showMessageDialog(null, "ERROR OCCURED");
        }
        
    }//GEN-LAST:event_jButton16ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
              try{
         String user = "root";
        String password = "";
         String url = "jdbc:mysql://localhost:3306/javaDatabase";
        Class.forName("com.mysql.jdbc.Driver");
        String deletepaid = testpatientid.getText();
        Connection con = DriverManager.getConnection(url, user, password);
        String query = "delete from Test where Patient_ID ="+deletepaid;
        PreparedStatement pst = con.prepareStatement(query);
        pst.executeUpdate();
        JOptionPane.showMessageDialog(null, "Successfully deleted");
        }
        catch(Exception e){
        JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
         testpatientid.setText("");
        testpatientname.setText("");
        testpatientage.setText("");
        testdate.setDate(null);
        other.setText("");
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton26ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton26ActionPerformed
        // TODO add your handling code here:
        DocViewPatient dv = new DocViewPatient();
        this.dispose();
    }//GEN-LAST:event_jButton26ActionPerformed

    private void jButton27ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton27ActionPerformed
        // TODO add your handling code here:
        DocPrescription dp = new DocPrescription();
        this.dispose();
    }//GEN-LAST:event_jButton27ActionPerformed

    private void jButton28ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton28ActionPerformed
        // TODO add your handling code here:
        DocViewText dvt = new DocViewText();
        this.dispose();
    }//GEN-LAST:event_jButton28ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DoctorDashBoard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DoctorDashBoard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DoctorDashBoard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DoctorDashBoard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DoctorDashBoard().setVisible(true);
            }
        });
    }
    
        public void changePanel(JPanel panel)
    {
    layeredpane.removeAll();
   layeredpane.add(panel);
   layeredpane.repaint();
   layeredpane.revalidate();
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox bio;
    private javax.swing.JCheckBox blood;
    private javax.swing.JCheckBox colon;
    private com.toedter.calendar.JDateChooser dateissue;
    private javax.swing.JButton dochome;
    private javax.swing.JTextField docid;
    private javax.swing.JLabel dociderror;
    private javax.swing.JTextField docname;
    private javax.swing.JLabel docnamerror;
    private javax.swing.JLabel docpaddress;
    private javax.swing.JButton docpatient;
    private javax.swing.JTextField docpatientaddress;
    private javax.swing.JTextField docpatientdisease;
    private javax.swing.JTextField docpatientdocid;
    private javax.swing.JTextField docpatientdocname;
    private javax.swing.JTextField docpatientid;
    private javax.swing.JTextField docpatientmobile;
    private javax.swing.JTextField docpatientname;
    private javax.swing.JTextField docpatientroom;
    private javax.swing.JLabel docpdisease;
    private javax.swing.JLabel docpdocid;
    private javax.swing.JLabel docpdocname;
    private javax.swing.JLabel docperror;
    private javax.swing.JLabel docpmobile;
    private javax.swing.JLabel docpname;
    private javax.swing.JButton docprescription;
    private javax.swing.JLabel docproom;
    private javax.swing.JButton doctest;
    private javax.swing.JPanel doctorhompanel;
    private javax.swing.JTextField doctorpatientid;
    private javax.swing.JTextField doctorpatientname;
    private javax.swing.JPanel doctorpatientpanel;
    private javax.swing.JPanel doctorprescriptionpanel;
    private javax.swing.JPanel doctortestpanel;
    private javax.swing.JButton docview;
    private javax.swing.JPanel docviewpanel;
    private javax.swing.JCheckBox egg;
    private javax.swing.JCheckBox gast;
    private javax.swing.JLabel iderror;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton26;
    private javax.swing.JButton jButton27;
    private javax.swing.JButton jButton28;
    private javax.swing.JButton jButton29;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private com.toedter.calendar.JDateChooser jDateChooser2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JSeparator jSeparator8;
    private javax.swing.JLayeredPane layeredpane;
    private javax.swing.JTextField mobile;
    private javax.swing.JLabel mobileerror;
    private javax.swing.JLabel namerror;
    private javax.swing.JTextField other;
    private javax.swing.JLabel paidage;
    private javax.swing.JLabel paiderror;
    private javax.swing.JLabel paidname;
    private javax.swing.JLabel paidother;
    private javax.swing.JTextArea prescription;
    private javax.swing.JCheckBox sono;
    private javax.swing.JCheckBox stool;
    private com.toedter.calendar.JDateChooser testdate;
    private javax.swing.JTextField testpatientage;
    private javax.swing.JTextField testpatientid;
    private javax.swing.JTextField testpatientname;
    private javax.swing.JCheckBox urine;
    private javax.swing.JLabel wlc;
    private javax.swing.JCheckBox xray;
    // End of variables declaration//GEN-END:variables

}
